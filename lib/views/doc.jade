extends ./layout

block content
    #wrapper
      include ./nav
      #page-wrapper
        include ./messages
        .container-fluid
          if !doc
            .row
              .col-lg-12
                h1.page-header
                  #{Collection.modelName}
                ol.breadcrumb
                  li
                    i.fa.fa-dashboard
                    a(href=appPath) Admin
                  li.active
                    i.fa.fa-
                    a(href=appPath + '/' + Collection.collection.name)
                      | #{Collection.pluralName}
                  li
                    i.fa.fa-
            .row
              .col-lg-12
                h2 
                  <span class="text-warning">Can't find document with id</span> #{id}!
                      

          if doc
            .row
              .col-lg-12
                h1.page-header
                  #{Collection.modelName} #{doc.id}
                ol.breadcrumb
                  li
                    i.fa.fa-dashboard
                    a(href=appPath) Admin
                  li.active
                    i.fa.fa-
                    a(href=appPath + '/' + Collection.collection.name)
                      | #{Collection.pluralName}
                  li
                    i.fa.fa-
                    |  #{doc.id}
            .row
              .col-xs-8.col-xs-offset-2
                form(action="", method="post")
                  each path in Collection.adminPaths
                    include ./fields/fields
                  ul.list-inline
                    li
                      button.btn.btn-success(type='submit') Save
                    li
                      button.btn.btn-danger(type='submit' name="_method" value='DELETE') Delete
// textarea
block append scripts
  script(type='text/javascript').
          // bootstrap textareas
          tinymce.init({
              selector: "textarea.tinymce",
              plugins : ["textcolor link image code"],
              force_p_newlines : false,
              forced_root_block : "",
              image_title: true, 
              // enable automatic uploads of images represented by blob or data URIs
              automatic_uploads: true,
              // URL of our upload handler (for more details check: https://www.tinymce.com/docs/configure/file-image-upload/#images_upload_url)
              // images_upload_url: 'postAcceptor.php',
              // here we add custom filepicker only to Image dialog
              file_picker_types: 'image', 
              // and here's our custom image picker
              file_picker_callback: function(cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');
                
                // Note: In modern browsers input[type="file"] is functional without 
                // even adding it to the DOM, but that might not be the case in some older
                // or quirky browsers like IE, so you might want to add it to the DOM
                // just in case, and visually hide it. And do not forget do remove it
                // once you do not need it anymore.

                input.onchange = function() {
                  var file = this.files[0];
                  
                  var reader = new FileReader();
                  reader.onload = function () {
                    // Note: Now we need to register the blob in TinyMCEs image blob
                    // registry. In the next release this part hopefully won't be
                    // necessary, as we are looking to handle it internally.
                    var id = 'blobid' + (new Date()).getTime();
                    var blobCache =  tinymce.activeEditor.editorUpload.blobCache;
                    var base64 = reader.result.split(',')[1];
                    var blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);

                    // call the callback and populate the Title field with the file name
                    cb(blobInfo.blobUri(), { title: file.name });
                  };
                  reader.readAsDataURL(file);
                };
                
                input.click();
              }
              });

//date
block append scripts
  script(type='text/javascript').
    $(function () {
                $('.datetimepicker').datetimepicker();
            });
